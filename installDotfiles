#!/bin/sh
#
#  Installs my Fish & Sway environment into
#  the $HOME directory of my Wayland/Systemd
#  based Linux systems.
#
#  Usage: ./installDotfiles
#
#         run from the cloned dotfiles directory
#

### Setup

HOME_FILES='
   .bash_profile
   .bashrc
   .bashrc_functions
   .bash_sessions_disable
   .inputrc
'

RM_FILES='
   .alias_rc
   .dashrc
   .environment_rc
   .env_rc
   .functions_rc
   .profile
   .prompt_rc
   .shrc
   bin/hostnamectl
   .config/nvim/lua/myOptions.lua
'

CONFIG_FILES='
   alacritty/alacritty.yml
   fish/completions/alacritty.fish
   fish/config.fish
   fish/functions/archJDK.fish
   fish/functions/ax.fish
   fish/functions/digpath.fish
   fish/functions/ev.fish
   fish/functions/ff.fish
   fish/functions/fields.fish
   fish/functions/fishterm.fish
   fish/functions/fm.fish
   fish/functions/fish_greeting.fish
   fish/functions/fish_mode_prompt.fish
   fish/functions/fish_prompt.fish
   fish/functions/fish_title.fish
   fish/functions/la.fish
   fish/functions/lbry.fish
   fish/functions/ldot.fish
   fish/functions/lh.fish
   fish/functions/ll.fish
   fish/functions/nsort.fish
   fish/functions/pathtrim.fish
   fish/functions/rc.fish
   fish/functions/swap_resolv_conf.fish
   fish/functions/ud.fish
   fish/functions/Wget.fish
   fish/functions/WgetM.fish
   nvim/init.lua
   nvim/lua/myBehaviors.lua
   nvim/lua/myKeybindings.lua
   nvim/lua/myLSPsettings.lua
   nvim/lua/myPlugins.lua
   sway/config
   waybar/config
   waybar/style.css
   wofi/config
'

SSH_CONFIGS='
   config
'

LOCAL_BIN_SCRIPTS='
   digpath
   pathtrim
'

BIN_SCRIPTS='
   bsPacker
   bsPaq
   buArch
   monitor
   rt
   spin
   viewJarManifest
'

## Function to back up and optionally removes files
remove_item () {

   rmItem="$1"

   test ! -e "$rmItem" ||
      rm -r "$rmItem" 2>&- || {
         printf '\n'
         printf "Error: Failed to remove item '%s'\\n" "$rmItem" >&2
         return 1
      }

   return 0
}

## Function to installs config files
install_config_file () {

   conf_dir="$1"
   file_path="$2"
   src_dir="$3"
   src="$src_dir/$file_path"
   trgt="$conf_dir/$file_path"
   trgt_dir="${trgt%/*}"

   test -d "$trgt_dir" || mkdir -p "$trgt_dir" || {
      printf '\n'
      printf "Error: Failed to create '%s' directory,\\n" "$trgt_dir" >&2
      printf "       punting on installing '%s' config file\\n" "$trgt" >&2
      return 1
   }

   # Install file
   if cp "$src" "$trgt"
   then
      chmod u=rw,g=,o= "$trgt" || {
          printf '\n'
          printf "Error: Failed to set permissions on '%s' to 600\\n" "$trgt" >&2
          return 1
      }
   else
      printf "Error: Failed to install '%s'\\n" "$trgt" >&2
      return 1
   fi

   return 0
}

### Install files

## Install home directory dot-files - backup existing files
for File in $HOME_FILES
do
    # Install into $HOME
    cp "${File}" ~ || {
       printf "Error: Failed while installing '~/%s'\\n" "${File}" >&2
       exit 1
    }
    # Set permissions
    chmod u=rw,g=r,o= ~/"${File}" || {
       printf 'Warning: Failed to set permissions' >&2
       printf ' on ~/%s to 640\n' ".${File%.*}"  >&2
    }
done

## Install local scripts

# Create ~/.local/bin directory if necessary
test -d ~/.local/bin || mkdir -p ~/.local/bin || {
   printf '\n'
   printf 'Error: Failed to create ~/.local/bin\n' >&2
   exit 1
}
chmod u=rwx,g=rx,o= ~/.local/bin || {
   printf '\n'
   printf "Warning: Failed to set permissions on '~/.local/bin' to 750\\n" >&2
}

# Create ~/bin directory if necessary
test -d ~/bin || mkdir ~/bin || {
   printf '\n'
   printf 'Error: Failed to create ~/bin\n' >&2
   exit 1
}
chmod u=rwx,g=rx,o= ~/bin || {
   printf '\n'
   printf "Warning: Failed to set permissions on '~/bin' to 750\\n" >&2
}

# Install .local/bin scripts
for File in $LOCAL_BIN_SCRIPTS
do
    cp bin/"$File" ~/.local/bin/ ||
       printf 'Warning: Failed to install ~/.local/bin/%s\n' "$File" >&2
    chmod u=rwx,g=rx,o= ~/.local/bin/"${File}" || {
       printf 'Warning: Failed to set permissions' >&2
       printf ' on ~/.local/bin/%s to 750\n' "${File}" >&2
    }
done

# Install  ~/bin  scripts
for File in $BIN_SCRIPTS
do
    cp bin/"$File" ~/bin/ ||
       printf 'Warning: Failed to install ~/bin/%s\n' "$File" >&2
    chmod u=rwx,g=rx,o= ~/bin/"${File}" || {
       printf 'Warning: Failed to set permissions' >&2
       printf ' on ~/bin/%s to 750\n' "${File}" >&2
    }
done

## Install configuration files

# Install ~/.config files
XDG_CONFIG_HOME="${XDG_CONFIG_HOME:=$HOME/.config}"

for conf_file in $CONFIG_FILES
do
    install_config_file "$XDG_CONFIG_HOME" "$conf_file" ./config
done

# Install SSH Configs

for conf_file in $SSH_CONFIGS
do
    install_config_file ~/.ssh "$conf_file" ./ssh
done


### Some final clean up

## Create ~/catch for the toSystem () family of shell functions
test -d ~/catch || mkdir ~/catch || {
   printf '\n'
   printf "Warning: Failed to create '~/catch', do so manually\\n" >&2
}

## Remove certain files
for File in $RM_FILES
do
    remove_item ~/"$File" || exit 1
done
