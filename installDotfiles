#!/bin/sh
#
#  Installs my Fish/Bash, Sway. Neovim environments into the
#  $HOME directory of my Wayland/Systemd based Linux systems.
#
#  Usage: ./installDotfiles
#
#         run from the cloned dotfiles directory
#
#  Note: Assuming $XDG_CONFIG_HOME & $HOME do not
#        contain whitespace.  Due to $RM_FILES.
#

### Setup

XDG_CONFIG_HOME="${XDG_CONFIG_HOME:=$HOME/.config}"
umask 0022

HOME_FILES='
   .bash_profile
   .bashrc
   .bashrc_functions
   .bash_sessions_disable
   .inputrc
'

RM_FILES="
   ${XDG_CONFIG_HOME}/nvim/lua/grs/myLSPsettings.lua
   ${XDG_CONFIG_HOME}/nvim/lua/grs/setupColorscheme.lua
   ${XDG_CONFIG_HOME}/nvim/lua/grs/setupTreesitter.lua
   ${HOME}/bin/bsPaq
   ${XDG_CONFIG_HOME}/nvim/lua/grs/setupCompletions.lua
   ${XDG_CONFIG_HOME}/nvim/lua/grs/setupLSP.lua
   ${XDG_CONFIG_HOME}/nvim/lua/grs/plugins/setupTokyoNight.lua
   ${XDG_CONFIG_HOME}/nvim/lua/grs/plugins/setupLualine.lua
"

CONFIG_FILES='
   alacritty/alacritty_default.yml
   alacritty/alacritty_darwin.yml
   fish/completions/alacritty.fish
   fish/config.fish
   fish/functions/archJDK.fish
   fish/functions/ax.fish
   fish/functions/digpath.fish
   fish/functions/ev.fish
   fish/functions/ff.fish
   fish/functions/fields.fish
   fish/functions/fishterm.fish
   fish/functions/fm.fish
   fish/functions/fish_greeting.fish
   fish/functions/fish_mode_prompt.fish
   fish/functions/fish_prompt.fish
   fish/functions/fish_title.fish
   fish/functions/la.fish
   fish/functions/lbry.fish
   fish/functions/ldot.fish
   fish/functions/lh.fish
   fish/functions/ll.fish
   fish/functions/nsort.fish
   fish/functions/pathtrim.fish
   fish/functions/rc.fish
   fish/functions/swap_resolv_conf.fish
   fish/functions/ud.fish
   fish/functions/Wget.fish
   fish/functions/WgetM.fish
   nvim/init.lua
   nvim/lua/grs/myBehaviors.lua
   nvim/lua/grs/myKeybindings.lua
   nvim/lua/grs/myPlugins.lua
   nvim/lua/grs/myDevEnv.lua
   nvim/lua/grs/plugins/init.lua
   nvim/lua/grs/plugins/setupCmp.lua
   nvim/lua/grs/plugins/setupColorscheme.lua
   nvim/lua/grs/plugins/setupTelescope.lua
   sway/config
   waybar/config
   waybar/style.css
   wofi/config
'

SSH_CONFIGS='
   config
'

LOCAL_BIN_SCRIPTS='
   digpath
   pathtrim
'

BIN_SCRIPTS='
   bsPacker
   buArch
   monitor
   rt
   spin
   viewJarManifest
'

## Function to removes files
remove_item () {

   rmItem="$1"

   test ! -e "$rmItem" ||
      rm -r "$rmItem" 2>&- || {
         printf '\n'
         printf "Error: Failed to remove item '%s'\\n" "$rmItem" >&2
         return 1
      }

   return 0
}

## Function to install files
install_file () {

   install_dir="$1"
   file_path="$2"
   src_dir="$3"
   perm="$4"
   src="$src_dir/$file_path"
   trgt="$install_dir/$file_path"
   trgt_dir="${trgt%/*}"

   test -d "$trgt_dir" || mkdir -p "$trgt_dir" || {
      printf '\n'
      printf "Error: Failed to create '%s' directory,\\n" "$trgt_dir" >&2
      printf "       punting on installing '%s' config file\\n" "$trgt" >&2
      return 1
   }

   # Install file
   if cp "$src" "$trgt"
   then
      chmod "$perm" "$trgt" || {
         printf '\n'
         printf "Error: Failed to set permissions on '%s' to '%s'\\n" "$trgt" "$perm" >&2
         return 1
      }
   else
      printf "Error: Failed to install '%s'\\n" "$trgt" >&2
      return 1
   fi

   return 0
}

### Install files

## Install home directory dot-files
for Home_File in $HOME_FILES
do
   install_file "$HOME" "$Home_File" . 0644
done

## Install local scripts

# Install  ~/bin  scripts
for File in $BIN_SCRIPTS
do
   install_file "$HOME/bin" "$File" ./bin 0755
done

# Install .local/bin scripts
for File in $LOCAL_BIN_SCRIPTS
do
   install_file "$HOME/.local/bin" "$File" ./bin 0755
done

## Install configuration files

# Install SSH Configs
for conf_file in $SSH_CONFIGS
do
   install_file ~/.ssh "$conf_file" ./ssh 0600 || exit 1
   chmod 0700 ~/.ssh
done

# Install $XDG_CONFIG_HOME files
for conf_file in $CONFIG_FILES
do
   install_file "$XDG_CONFIG_HOME" "$conf_file" ./config 0644 || exit 1
done

# Choose alternate config files to use based on OS
if [[ $(uname) == Darwin ]]
then
   mv "${XDG_CONFIG_HOME}"/alacritty/alacritty{_darwin,}.yml
   rm -f "${XDG_CONFIG_HOME}"/alacritty/alacritty_default.yml
else
   mv "${XDG_CONFIG_HOME}"/alacritty/alacritty{_default,}.yml
   rm -f "{$XDG_CONFIG_HOME}"/alacritty/alacritty_darwin.yml
fi

### Some final clean up

## Create ~/catch for the toSystem () family of shell functions
test -d ~/catch || mkdir ~/catch || {
   printf '\n'
   printf "Warning: Failed to create '~/catch'.\\n" >&2
}

## Remove certain files
for File in $RM_FILES
do
   remove_item "$File" || exit 1
done
