--[[ Using Packer as the plugin manager.  The Packer plugin
     manages the plugins I install as a Vim8/Neovim Package.

       Module: grs
       File: ~/.config/nvim/lua/grs/Packer.lua

     This file configures the packer.nvim plugin which
     creates and manages the plugin package.  This package
     is located here: ~/.local/share/nvim/site/pack/packer
     and the autogenerated plugin loader code, is located
     here: ~/.config/nvim/plugin/packer_compiled.lua

     To keep plugin repos up to date, periodically run

       :PackerSync

     When this file gets updated, and you don't
     want to Sync with the Git repos, then run

       :PackerCompile

     Not sure if necessary, but I would restart
     Neovim after running either of the aove commands.

  ]]

local ok, packer = pcall(require, 'packer')
if not ok then
  print('Warning: Packer not installed/configured - no plugins, ')
  print('         to bootstrap, exit Neovim and run: ~/bin/bsPacker ')
  print(' ')
  print(packer)
  return
end

local packer_util = require('packer.util')

packer.init {
  display = {
    open_fn = function ()
      return packer_util.float { border = 'rounded' }
    end
  }
}

local use = packer.use

return packer.startup(
  function()
    -- Packer manages itself
    use { 'wbthomason/packer.nvim' }

    -- Make keybindings discoverable with Whick-Key
    use { 'folke/which-key.nvim' }

    -- General purpose text editing plugins
    use { 'numToStr/Comment.nvim' }  -- comment out code - treesitter aware
    use { 'justinmk/vim-sneak' }  -- easy motion replacement
    use { 'tpope/vim-surround' }  -- surround text objects with matching symbols
    use { 'tpope/vim-repeat' }  -- enable supported plugins to use '.'

    -- Colorize names & hexcodes like Purple Blue #15aadd
    use { 'norcalli/nvim-colorizer.lua' }

    -- Setup colorscheme & statusline
    use { 'folke/tokyonight.nvim' }

    use {
      'nvim-lualine/lualine.nvim',
      requires = {
        'kyazdani42/nvim-web-devicons'
      }
    }

    -- Install language modules for built-in treesitter
    use {
      'nvim-treesitter/nvim-treesitter',
      run = ':TSUpdateSync'
    }

    -- Telescope - highly extendable fuzzy finder over lists
    use {
      'nvim-telescope/telescope.nvim',
      requires = {
        'nvim-lua/plenary.nvim',
        'nvim-lua/popup.nvim',
        'nvim-telescope/telescope-ui-select.nvim'
      }
    }

    -- Completion & snippet support
    use {
      'hrsh7th/nvim-cmp',
      requires = {
        'hrsh7th/cmp-buffer',
        'hrsh7th/cmp-cmdline',
        'hrsh7th/cmp-nvim-lsp',
        'hrsh7th/cmp-nvim-lua',
        'hrsh7th/cmp-path',
        'lukas-reineke/cmp-rg',
        { 'saadparwaiz1/cmp_luasnip',
          requires = {
            'L3MON4D3/LuaSnip',
            'rafamadriz/friendly-snippets'
          }
        }
      }
    }

    -- LSP configuration
    use { 'neovim/nvim-lspconfig' }

    use { 'williamboman/nvim-lsp-installer' }

    use { 'simrat39/rust-tools.nvim' }

    use {
      'scalameta/nvim-metals',
      requires = {
        'nvim-lua/plenary.nvim'
      }
    }

    -- File detection & syntax highlighting
    use 'ziglang/zig.vim'

  end)
