#!/bin/sh
#
#  Bootstraps packer.nvim by installing it into the right place.
#
#  This script a bit heavy handed if all you did
#  was update ~/.config/nvim/lua/grs/util/packer.lua.
#  In that case all just run
#
#      :PackerSync
#
#  and then restart Neovim.
#

export XDG_DATA_HOME="${XDG_DATA_HOME:-$HOME/.local/share}"
export XDG_CONFIG_HOME="${XDG_CONFIG_HOME:-$HOME/.config}"
PackerStartDir="$XDG_DATA_HOME"/nvim/site/pack/packer/start
PackerCloneDir="$PackerStartDir"/packer.nvim
PackerCompiledDir="$XDG_CONFIG_HOME"/nvim/plugin
PackerCompiledLua="$PackerCompiledDir"/packer_compiled.lua
PackerGIT=https://github.com/wbthomason/packer.nvim

test -d "$PackerStartDir" || {
    mkdir -p "$PackerStartDir" || {
        printf '\nWarning: Failed to make packer start directory'
        printf '\n         "%s"\n' "$PackerStartDir"
    }
}
test -d "$PackerCloneDir" && {
    chmod -R u+rw "$PackerCloneDir" || {
        printf '\nWarning: Failed to open up permissions on'
        printf '\n         "%s"\n' "$PackerCloneDir"
    }
    rm -rf "$PackerCloneDir"
    test -d "$PackerCloneDir" && {
        printf '\nWarning: Failed to remove old packer plugin'
        printf '\n         "%s"\n' "$PackerCloneDir"
    }
}

test -f "$PackerCompiledLua" && {
    chmod u+rw "$PackerCompiledLua" || {
        printf '\nWarning: Failed to open up permissions on'
        printf '\n         "%s"\n' "$PackerCompiledLua"
    }
    rm "$PackerCompiledLua" || {
        printf '\nWarning: Failed to remove old packer_compiled.lua file'
        printf '\n         "%s"\n' "$PackerCompiledLua"
    }
}

if git clone --depth 1 $PackerGIT "$PackerCloneDir"
then
    printf '\nUpdating Packer plugins...\n'
    nvim --headless \
        -c 'autocmd User PackerComplete quitall' \
        -c 'PackerSync'
    printf '\n\nUpdating Mason packages...\n'
    nvim --headless -c \
        'autocmd User MasonUpdateAllComplete quitall' \
        -c 'MasonUpdateAll'
    printf '\n\nDone!!!\n'
else
    printf '\nError: "git clone" failed for "%s"\n' $PackerGIT
fi
